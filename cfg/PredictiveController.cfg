#!/usr/bin/env python
PACKAGE = "predictive_control"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# ==================================== Parameters for the solver =====================================================

solv_constr = gen.add_group("Solver Stage Cost Parameters", "solver_constraints")
solv_constr.add("Wcontour",      double_t, 1, "Contour error weight", 0.2, 0.0, 100.0)
solv_constr.add("Wlag",          double_t, 1, "Lag error weight", 1.5, 0.0, 100.0)
solv_constr.add("Ka",            double_t, 1, "Acceleration weight", 50.0, 0.0, 100.0)
solv_constr.add("Kdelta",        double_t, 1, "Angular velocity weight", 1.6, 0.0, 100.0)
solv_constr.add("Ws",            double_t, 1, "Weight on slack variable", 10000.0, 0.0, 10000.0)
solv_constr.add("WR",            double_t, 1, "Weight on repulsive force", 2.0, 0.0, 50.0)
solv_constr.add("vRef",          double_t, 1, "Reference velocity", 8.0, 0.0, 10.0)
solv_constr.add("Kv",            double_t, 1, "Velocity weight", 4.0, 0.0, 100.0)

# ==================================== Parameters for limits enforcement =====================================================
limits = gen.add_group("Controller Options", "options")
limits.add("enable_output",     bool_t,   0, "Enable/Disable contorl output", False)
limits.add("reset_world",     bool_t,   0, "Reset simulation", False)
limits.add("n_iterations",     int_t,   1, "Number of KKT improvement iterations", 100, 1, 100)
limits.add("simulation_mode",     bool_t,   0, "Enable gazebo simulation", True)
# ==================================== Parameters for search window =====================================================
search_window = gen.add_group("Search Window Options", "options")
search_window.add("window_size",     double_t,   1, "Seacrh window size", 1, 0.0, 10.0)
search_window.add("n_search_points", int_t,   1, "Number of seacrh points", 20, 1, 100)
exit(gen.generate(PACKAGE, "predictive_control", "PredictiveController"))
